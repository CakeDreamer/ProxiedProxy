package work.art1st.proxiedproxy.platform.velocity.packet;

import com.velocitypowered.api.network.ProtocolVersion;
import com.velocitypowered.proxy.protocol.ProtocolUtils;
import com.velocitypowered.proxy.protocol.packet.Handshake;
import io.netty.buffer.ByteBuf;

/**
 * Allowing long serverAddress generated by Bungeecord(legacy) forwarding.
 * Notes: We cannot directly modify MAXIMUM_HOSTNAME_LENGTH here since it will be optimized by the compiler.
 */
public class HandshakePacket extends Handshake {
    private static final int MAXIMUM_HOSTNAME_LENGTH = 32767;

    @Override
    public void decode(ByteBuf buf, ProtocolUtils.Direction direction, ProtocolVersion ignored) {
        int realProtocolVersion = ProtocolUtils.readVarInt(buf);
        this.setProtocolVersion(ProtocolVersion.getProtocolVersion(realProtocolVersion));
        this.setServerAddress(ProtocolUtils.readString(buf, MAXIMUM_HOSTNAME_LENGTH));
        this.setPort(buf.readUnsignedShort());
        this.setNextStatus(ProtocolUtils.readVarInt(buf));
    }
}
